{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alvin\\\\Documents\\\\GitHub\\\\Tugas_modul5_kel38\\\\src\\\\Components\\\\Selector.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { ProductStateContext, ProductDispatchContext, FetchingContext } from \"../App\";\nimport Sorter from \"./Sorter\";\nimport \"./Selector.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Selector = () => {\n  _s();\n\n  const isFetching = useContext(FetchingContext);\n  const productState = useContext(ProductStateContext);\n  const productDispatch = useContext(ProductDispatchContext);\n\n  const handleCategoryButton = event => {\n    productDispatch({\n      type: \"changeCategory\",\n      payload: event.target.name\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      justifyContent: \"center\"\n    },\n    children: [!isFetching && /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textTransform: \"uppercase\"\n      },\n      children: [\"Kategori : \", productState.selectedCategory]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 27\n    }, this), isFetching ? /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: productState.categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        name: category,\n        onClick: handleCategoryButton,\n        children: category\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Sorter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Selector, \"fAhGXdDiDYXAcYypwdY9+XPlbH8=\");\n\n_c = Selector;\nexport default Selector;\n\nvar _c;\n\n$RefreshReg$(_c, \"Selector\");","map":{"version":3,"sources":["C:/Users/alvin/Documents/GitHub/Tugas_modul5_kel38/src/Components/Selector.jsx"],"names":["useContext","ProductStateContext","ProductDispatchContext","FetchingContext","Sorter","Selector","isFetching","productState","productDispatch","handleCategoryButton","event","type","payload","target","name","justifyContent","textTransform","selectedCategory","categories","map","category","index"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SACEC,mBADF,EAEEC,sBAFF,EAGEC,eAHF,QAIO,QAJP;AAKA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,gBAAP;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,UAAU,GAAGN,UAAU,CAACG,eAAD,CAA7B;AACA,QAAMI,YAAY,GAAGP,UAAU,CAACC,mBAAD,CAA/B;AACA,QAAMO,eAAe,GAAGR,UAAU,CAACE,sBAAD,CAAlC;;AAEA,QAAMO,oBAAoB,GAAIC,KAAD,IAAW;AACtCF,IAAAA,eAAe,CAAC;AAAEG,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAAhD,KAAD,CAAf;AACD,GAFD;;AAIA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,cAAc,EAAE;AAAjB,KAAZ;AAAA,eACK,CAACT,UAAD,iBAAe;AAAI,MAAA,KAAK,EAAE;AAACU,QAAAA,aAAa,EAAE;AAAhB,OAAX;AAAA,gCAAqDT,YAAY,CAACU,gBAAlE;AAAA;AAAA;AAAA;AAAA;AAAA,YADpB,EAEGX,UAAU,gBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,gBAGP;AAAA,gBACCC,YAAY,CAACW,UAAb,CAAwBC,GAAxB,CAA4B,CAACC,QAAD,EAAWC,KAAX,kBAC3B;AAEA,QAAA,IAAI,EAAED,QAFN;AAGA,QAAA,OAAO,EAAEX,oBAHT;AAAA,kBAKGW;AALH,SACKC,KADL;AAAA;AAAA;AAAA;AAAA,cADD;AADD;AAAA;AAAA;AAAA;AAAA,YALN,eAiBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBD,CA9BD;;GAAMhB,Q;;KAAAA,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import { useContext } from \"react\";\r\nimport {\r\n  ProductStateContext,\r\n  ProductDispatchContext,\r\n  FetchingContext,\r\n} from \"../App\";\r\nimport Sorter from \"./Sorter\";\r\nimport \"./Selector.css\";\r\n\r\nconst Selector = () => {\r\n  const isFetching = useContext(FetchingContext);\r\n  const productState = useContext(ProductStateContext);\r\n  const productDispatch = useContext(ProductDispatchContext);\r\n\r\n  const handleCategoryButton = (event) => {\r\n    productDispatch({ type: \"changeCategory\", payload: event.target.name });\r\n  };\r\n\r\n  return (\r\n      <div style={{justifyContent: \"center\"}}>\r\n          {!isFetching && <h3 style={{textTransform: \"uppercase\"}}>Kategori : {productState.selectedCategory}</h3>}\r\n        {isFetching ? (\r\n          <b>Loading...</b>\r\n          ) : (\r\n            <ul>\r\n            {productState.categories.map((category, index) => (\r\n              <button\r\n              key={index}\r\n              name={category}\r\n              onClick={handleCategoryButton}\r\n              >\r\n                {category}\r\n              </button>\r\n            ))}\r\n          </ul>\r\n        )}\r\n        <Sorter />\r\n      </div>\r\n  );\r\n};\r\n\r\nexport default Selector;\r\n"]},"metadata":{},"sourceType":"module"}